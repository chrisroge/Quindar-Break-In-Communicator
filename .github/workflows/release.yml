name: Release Binaries

on:
  release:
    types: [created]
  workflow_dispatch:  # Allow manual triggering for testing

permissions:
  contents: write  # Required to upload release assets

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    env:
      MACOSX_DEPLOYMENT_TARGET: "11.0"
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: Windows x64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: quindar_api.exe
            asset_name: quindar-tone-api-windows-x64.exe

          - platform: macOS x64 (Intel)
            os: macos-13
            target: x86_64-apple-darwin
            binary_name: quindar_api
            asset_name: quindar-tone-api-macos-x64

          - platform: macOS ARM64 (Apple Silicon)
            os: macos-14
            target: aarch64-apple-darwin
            binary_name: quindar_api
            asset_name: quindar-tone-api-macos-arm64

          - platform: Linux x64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: quindar_api
            asset_name: quindar-tone-api-linux-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2-dev pkg-config libssl-dev

      - name: Set macOS RUSTFLAGS for AppKit
        if: runner.os == 'macOS'
        run: echo "RUSTFLAGS=-D warnings -C link-arg=-framework -C link-arg=AppKit" >> $GITHUB_ENV

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Strip binary (Unix)
        if: runner.os != 'Windows'
        run: |
          strip target/${{ matrix.target }}/release/${{ matrix.binary_name }} || true

      - name: Rename binary (Windows)
        if: runner.os == 'Windows'
        run: |
          Copy-Item target/${{ matrix.target }}/release/${{ matrix.binary_name }} ${{ matrix.asset_name }}
        shell: pwsh

      - name: Rename binary (Unix)
        if: runner.os != 'Windows'
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} ${{ matrix.asset_name }}

      - name: Upload binary to release
        run: |
          gh release upload ${{ github.event.release.tag_name || github.ref_name }} ${{ matrix.asset_name }} --clobber
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload artifact for download
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}
          path: ${{ matrix.asset_name }}
